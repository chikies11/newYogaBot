package org.example;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.example.service.DatabaseService;
import org.example.service.MessageCleanupService;
import org.springframework.jdbc.core.JdbcTemplate;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/")
public class WebhookController {

    private final YogaBot bot;
    private final PingService pingService;
    private final DatabaseService databaseService;
    private final MessageCleanupService messageCleanupService;
    private final JdbcTemplate jdbcTemplate;

    public WebhookController(YogaBot bot, PingService pingService,
                             DatabaseService databaseService,
                             MessageCleanupService messageCleanupService,
                             JdbcTemplate jdbcTemplate) {
        this.bot = bot;
        this.pingService = pingService;
        this.databaseService = databaseService;
        this.messageCleanupService = messageCleanupService;
        this.jdbcTemplate = jdbcTemplate;
    }

    @PostMapping
    public ResponseEntity<Void> onUpdateReceived(@RequestBody Update update) {
        System.out.println("üåê –ü–æ–ª—É—á–µ–Ω webhook –∑–∞–ø—Ä–æ—Å, update_id: " + update.getUpdateId());

        // –ü–µ—Ä–µ–¥–∞–µ–º Update –≤ –±–æ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        bot.onWebhookUpdateReceived(update);

        return ResponseEntity.ok().build();
    }

    @GetMapping
    public ResponseEntity<String> healthCheck() {
        return ResponseEntity.ok("YogaBot is running! ü§ñ");
    }

    @GetMapping("/health")
    public ResponseEntity<String> health() {
        return ResponseEntity.ok("YogaBot is healthy! üè•");
    }

    @GetMapping("/status")
    public ResponseEntity<Map<String, Object>> getStatus() {
        Map<String, Object> status = new HashMap<>();
        status.put("status", "OK");
        status.put("timestamp", LocalDateTime.now().toString());
        status.put("service", "YogaBot");
        status.put("version", "1.0");

        if (pingService != null) {
            status.put("lastPing", pingService.getLastSuccessfulPing() != null ?
                    pingService.getLastSuccessfulPing().toString() : "N/A");
        }

        return ResponseEntity.ok(status);
    }

    // –¢–µ—Å—Ç–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    @GetMapping("/test-notification")
    public ResponseEntity<String> testNotification() {
        try {
            bot.sendTestNotification();
            return ResponseEntity.ok("""
                üß™ –¢–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!
                
                –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª: @Katys_yoga
                
                –î–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏:
                ‚Ä¢ üåÖ –£—Ç—Ä–µ–Ω–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                ‚Ä¢ üåá –í–µ—á–µ—Ä–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ  
                
                –ï—Å–ª–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ!
                """);
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/send-today")
    public ResponseEntity<String> sendTodayNotification() {
        try {
            bot.sendTodayNotification();
            return ResponseEntity.ok("""
            üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª!
            
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª: @yoga_yollayo11
            
            –î–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –°–ï–ì–û–î–ù–Ø–®–ù–ò–ï –∑–∞–Ω—è—Ç–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–ø–∏—Å–∏.
            """);
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/send-today-morning")
    public ResponseEntity<String> sendTodayMorning() {
        try {
            bot.sendTodayMorningNotification();
            return ResponseEntity.ok("üåÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —É—Ç—Ä–µ–Ω–Ω–µ–µ –∑–∞–Ω—è—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/send-today-evening")
    public ResponseEntity<String> sendTodayEvening() {
        try {
            bot.sendTodayEveningNotification();
            return ResponseEntity.ok("üåá –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –≤–µ—á–µ—Ä–Ω–µ–µ –∑–∞–Ω—è—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/test-morning")
    public ResponseEntity<String> testMorning() {
        try {
            bot.sendManualNotification("morning");
            return ResponseEntity.ok("üåÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É—Ç—Ä–µ–Ω–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @Katys_yoga");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/test-evening")
    public ResponseEntity<String> testEvening() {
        try {
            bot.sendManualNotification("evening");
            return ResponseEntity.ok("üåá –¢–µ—Å—Ç–æ–≤–æ–µ –≤–µ—á–µ—Ä–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @Katys_yoga");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/test-no-classes")
    public ResponseEntity<String> testNoClasses() {
        try {
            bot.sendManualNotification("no_classes");
            return ResponseEntity.ok("üìù –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–Ω—è—Ç–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @Katys_yoga");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    // üîß –¢–ï–°–¢–û–í–´–ï –≠–ù–î–ü–û–ò–ù–¢–´ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –£–î–ê–õ–ï–ù–ò–Ø –û–¢–ë–ò–í–û–ö

    @GetMapping("/reinit-db")
    public ResponseEntity<String> reinitDatabase() {
        try {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
            databaseService.createTablesIfNotExists();
            databaseService.initializeDefaultSchedule();

            return ResponseEntity.ok("""
                ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!
                
                –í—ã–ø–æ–ª–Ω–µ–Ω–æ:
                ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
                ‚Ä¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
                """);
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: " + e.getMessage());
        }
    }

    @GetMapping("/test-delete")
    public ResponseEntity<String> testDelete() {
        try {
            LocalDate testDate = LocalDate.now().minusDays(1);

            // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—á–µ—Ä–∞—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            messageCleanupService.deleteMessagesForDateAndType(testDate, "morning");
            messageCleanupService.deleteMessagesForDateAndType(testDate, "evening");
            messageCleanupService.deleteMessagesForDateAndType(testDate, "no_classes");

            return ResponseEntity.ok("""
                ‚úÖ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω!
                
                –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞ –≤—á–µ—Ä–∞ ({})
                ‚Ä¢ –£—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                ‚Ä¢ –í–µ—á–µ—Ä–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è  
                ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–Ω—è—Ç–∏–π
                
                –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.
                """.formatted(testDate));
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è: " + e.getMessage());
        }
    }

    @GetMapping("/test-delete-morning")
    public ResponseEntity<String> testDeleteMorning() {
        try {
            messageCleanupService.testMorningDeletion();
            return ResponseEntity.ok("‚úÖ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/test-delete-evening")
    public ResponseEntity<String> testDeleteEvening() {
        try {
            messageCleanupService.testEveningDeletion();
            return ResponseEntity.ok("‚úÖ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –≤–µ—á–µ—Ä–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/test-delete-no-classes")
    public ResponseEntity<String> testDeleteNoClasses() {
        try {
            messageCleanupService.testNoClassesDeletion();
            return ResponseEntity.ok("‚úÖ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–Ω—è—Ç–∏–π –∑–∞–ø—É—â–µ–Ω");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    @GetMapping("/debug/messages")
    public ResponseEntity<List<Map<String, Object>>> debugMessages() {
        try {
            List<Map<String, Object>> messages = jdbcTemplate.queryForList("""
                SELECT * FROM channel_messages 
                ORDER BY lesson_date DESC, lesson_type
                LIMIT 20
            """);
            return ResponseEntity.ok(messages);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: " + e.getMessage());
            return ResponseEntity.status(500).build();
        }
    }

    @GetMapping("/debug/schedule")
    public ResponseEntity<Map<String, Object>> debugSchedule() {
        try {
            Map<String, Object> debugInfo = new HashMap<>();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É lessons
            try {
                List<Map<String, Object>> lessons = jdbcTemplate.queryForList("SELECT COUNT(*) as count FROM lessons");
                debugInfo.put("lessons_count", lessons.get(0).get("count"));
            } catch (Exception e) {
                debugInfo.put("lessons_count", "–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É channel_messages
            try {
                List<Map<String, Object>> messages = jdbcTemplate.queryForList("SELECT COUNT(*) as count FROM channel_messages");
                debugInfo.put("messages_count", messages.get(0).get("count"));
            } catch (Exception e) {
                debugInfo.put("messages_count", "–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
            }

            debugInfo.put("current_time", LocalDateTime.now().toString());
            debugInfo.put("moscow_time", LocalDateTime.now().atZone(java.time.ZoneId.of("Europe/Moscow")).toString());

            return ResponseEntity.ok(debugInfo);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: " + e.getMessage());
            return ResponseEntity.status(500).build();
        }
    }
}